{"ast":null,"code":"const parse = require('./parse');\nconst eq = require('./eq');\nconst diff = (version1, version2) => {\n  const v1 = parse(version1);\n  const v2 = parse(version2);\n  if (eq(v1, v2)) {\n    return null;\n  } else {\n    const hasPre = v1.prerelease.length || v2.prerelease.length;\n    const prefix = hasPre ? 'pre' : '';\n    const defaultResult = hasPre ? 'prerelease' : '';\n    if (v1.major !== v2.major) {\n      return prefix + 'major';\n    }\n    if (v1.minor !== v2.minor) {\n      return prefix + 'minor';\n    }\n    if (v1.patch !== v2.patch) {\n      return prefix + 'patch';\n    }\n    if (!v1.prerelease.length || !v2.prerelease.length) {\n      if (v1.patch) {\n        return 'patch';\n      }\n      if (v1.minor) {\n        return 'minor';\n      }\n      if (v1.major) {\n        return 'major';\n      }\n    }\n    return defaultResult; // may be undefined\n  }\n};\n\nmodule.exports = diff;","map":{"version":3,"names":["parse","require","eq","diff","version1","version2","v1","v2","hasPre","prerelease","length","prefix","defaultResult","major","minor","patch","module","exports"],"sources":["C:/MMY Project/MakeMyYatraa/Frontend/Data0/node_modules/semver/functions/diff.js"],"sourcesContent":["const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1)\n  const v2 = parse(version2)\n  if (eq(v1, v2)) {\n    return null\n  } else {\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n\n    if (v1.major !== v2.major) {\n      return prefix + 'major'\n    }\n    if (v1.minor !== v2.minor) {\n      return prefix + 'minor'\n    }\n\n    if (v1.patch !== v2.patch) {\n      return prefix + 'patch'\n    }\n\n    if (!v1.prerelease.length || !v2.prerelease.length) {\n      if (v1.patch) {\n        return 'patch'\n      }\n      if (v1.minor) {\n        return 'minor'\n      }\n      if (v1.major) {\n        return 'major'\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;AAChC,MAAMC,EAAE,GAAGD,OAAO,CAAC,MAAM,CAAC;AAE1B,MAAME,IAAI,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EACnC,MAAMC,EAAE,GAAGN,KAAK,CAACI,QAAQ,CAAC;EAC1B,MAAMG,EAAE,GAAGP,KAAK,CAACK,QAAQ,CAAC;EAC1B,IAAIH,EAAE,CAACI,EAAE,EAAEC,EAAE,CAAC,EAAE;IACd,OAAO,IAAI;EACb,CAAC,MAAM;IACL,MAAMC,MAAM,GAAGF,EAAE,CAACG,UAAU,CAACC,MAAM,IAAIH,EAAE,CAACE,UAAU,CAACC,MAAM;IAC3D,MAAMC,MAAM,GAAGH,MAAM,GAAG,KAAK,GAAG,EAAE;IAClC,MAAMI,aAAa,GAAGJ,MAAM,GAAG,YAAY,GAAG,EAAE;IAEhD,IAAIF,EAAE,CAACO,KAAK,KAAKN,EAAE,CAACM,KAAK,EAAE;MACzB,OAAOF,MAAM,GAAG,OAAO;IACzB;IACA,IAAIL,EAAE,CAACQ,KAAK,KAAKP,EAAE,CAACO,KAAK,EAAE;MACzB,OAAOH,MAAM,GAAG,OAAO;IACzB;IAEA,IAAIL,EAAE,CAACS,KAAK,KAAKR,EAAE,CAACQ,KAAK,EAAE;MACzB,OAAOJ,MAAM,GAAG,OAAO;IACzB;IAEA,IAAI,CAACL,EAAE,CAACG,UAAU,CAACC,MAAM,IAAI,CAACH,EAAE,CAACE,UAAU,CAACC,MAAM,EAAE;MAClD,IAAIJ,EAAE,CAACS,KAAK,EAAE;QACZ,OAAO,OAAO;MAChB;MACA,IAAIT,EAAE,CAACQ,KAAK,EAAE;QACZ,OAAO,OAAO;MAChB;MACA,IAAIR,EAAE,CAACO,KAAK,EAAE;QACZ,OAAO,OAAO;MAChB;IACF;IACA,OAAOD,aAAa,EAAC;EACvB;AACF,CAAC;;AACDI,MAAM,CAACC,OAAO,GAAGd,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}