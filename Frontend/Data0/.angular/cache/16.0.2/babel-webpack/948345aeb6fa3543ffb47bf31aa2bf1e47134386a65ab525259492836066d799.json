{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/toolbar\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/input\";\nclass LoginComponent {}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)();\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 33,\n  vars: 1,\n  consts: [[\"rel\", \"preconnect\", \"href\", \"https://fonts.googleapis.com\"], [\"rel\", \"preconnect\", \"href\", \"https://fonts.gstatics.com\", \"crossorigin\", \"\"], [\"href\", \"https://fonts.googleapis.com/css2?family=Caveat:wght@500&display=swap\", \"rel\", \"stylesheet\"], [\"color\", \"primary\"], [1, \"a\"], [2, \"text-align\", \"center\"], [1, \"login-form\", 3, \"formGroup\", \"submit\"], [1, \"example-container\"], [\"appearance\", \"outline\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Ex. HP005677BT\", \"formControlName\", \"userId\", \"required\", \"\"], [\"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"Ex. Abc@1234\", \"formControlName\", \"password\", \"required\", \"\"], [1, \"form-check\"], [\"for\", \"rememberMe\", 1, \"form-check-label\"], [\"type\", \"checkbox\", \"name\", \"rememberMe\", \"id\", \"rememberMe\", \"formControlName\", \"rememberMe\", 1, \"form-check-input\"], [\"mat-raised-button\", \"\", \"color\", \"Warn\", \"type\", \"submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"head\");\n      i0.ɵɵelement(1, \"link\", 0)(2, \"link\", 1)(3, \"link\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"mat-toolbar\", 3)(5, \"h1\");\n      i0.ɵɵtext(6, \"Make My Yatraa\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4);\n      i0.ɵɵelement(8, \"section\", 5);\n      i0.ɵɵelementStart(9, \"form\", 6);\n      i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_9_listener() {\n        return ctx.loginFun();\n      });\n      i0.ɵɵelementStart(10, \"div\")(11, \"span\");\n      i0.ɵɵtext(12, \"LOGIN\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(13, \"br\");\n      i0.ɵɵelementStart(14, \"section\", 7)(15, \"mat-form-field\", 8)(16, \"mat-label\");\n      i0.ɵɵtext(17, \"ENTER USER ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"br\");\n      i0.ɵɵelementStart(20, \"mat-form-field\", 8)(21, \"mat-label\");\n      i0.ɵɵtext(22, \"Enter Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"br\");\n      i0.ɵɵelementStart(25, \"div\", 11)(26, \"label\", 12);\n      i0.ɵɵelement(27, \"input\", 13);\n      i0.ɵɵelementStart(28, \"span\");\n      i0.ɵɵtext(29, \"Remember me\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(30, \"span\")(31, \"button\", 14);\n      i0.ɵɵtext(32, \"LOGIN\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i2.MatToolbar, i3.MatFormField, i3.MatLabel, i4.MatButton, i5.MatInput],\n  styles: [\"mat-form-field[_ngcontent-%COMP%]{\\r\\n    width: 250px;height: auto;\\r\\n}\\r\\n.a[_ngcontent-%COMP%]{\\r\\n    width: 100%; background-color: rgb(163, 182, 186);height: 100%;padding: 20px;\\r\\n}\\r\\ndiv[_ngcontent-%COMP%]{\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n.login-form[_ngcontent-%COMP%]{\\r\\n    text-align: center;\\r\\n}\\r\\n.example-full-width[_ngcontent-%COMP%]{\\r\\n    color: white;width: 100%;background-color: black;\\r\\n}\\r\\nmat-label[_ngcontent-%COMP%]{\\r\\n    position: relative;\\r\\n}\\r\\n.example-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]    + mat-form-field[_ngcontent-%COMP%] {\\r\\n    margin-left: 8px;\\r\\n  }\\r\\n  input[_ngcontent-%COMP%]{\\r\\n    border: 0cap;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvUmVnaXN0ZXIvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVksQ0FBQyxZQUFZO0FBQzdCO0FBQ0E7SUFDSSxXQUFXLEVBQUUsb0NBQW9DLENBQUMsWUFBWSxDQUFDLGFBQWE7QUFDaEY7QUFDQTtJQUNJLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0ksa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxZQUFZLENBQUMsV0FBVyxDQUFDLHVCQUF1QjtBQUNwRDtBQUNBO0lBQ0ksa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxnQkFBZ0I7RUFDbEI7RUFDQTtJQUNFLFlBQVksQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxke1xyXG4gICAgd2lkdGg6IDI1MHB4O2hlaWdodDogYXV0bztcclxufVxyXG4uYXtcclxuICAgIHdpZHRoOiAxMDAlOyBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTYzLCAxODIsIDE4Nik7aGVpZ2h0OiAxMDAlO3BhZGRpbmc6IDIwcHg7XHJcbn1cclxuZGl2e1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG4ubG9naW4tZm9ybXtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG4uZXhhbXBsZS1mdWxsLXdpZHRoe1xyXG4gICAgY29sb3I6IHdoaXRlO3dpZHRoOiAxMDAlO2JhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG59XHJcbm1hdC1sYWJlbHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG4uZXhhbXBsZS1jb250YWluZXIgbWF0LWZvcm0tZmllbGQgKyBtYXQtZm9ybS1maWVsZCB7XHJcbiAgICBtYXJnaW4tbGVmdDogOHB4O1xyXG4gIH1cclxuICBpbnB1dHtcclxuICAgIGJvcmRlcjogMGNhcDt9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginComponent };\n{\n  this.loginForm = new FormGroup({\n    userId: new FormControl('', {\n      nonNullable: true,\n      validators: [Validators.required]\n    }),\n    password: new FormControl('', {\n      nonNullable: true,\n      validators: [Validators.required]\n    }),\n    rememberMe: new FormControl(false, {\n      nonNullable: true,\n      validators: [Validators.required]\n    })\n  });\n}\nloginFun();\n{\n  const data = this.loginForm.value;\n  const pass = this.loginForm.get('password')?.value;\n  const remember = this.loginForm.getRawValue();\n  console.log(\"Password\", pass);\n  var formData = new FormData();\n  formData.append(\"password\", JSON.stringify(pass));\n  if (data.userId != '' && data.password != '') {\n    this.login.login(data.userId, formData, remember).subscribe({\n      next: () => {\n        this.authenticationError = false;\n        if (!this.router.getCurrentNavigation()) {\n          // There were no routing during login (eg from navigationToStoredUrl)\n          this.router.navigate(['']);\n        }\n      },\n      error: () => this.authenticationError = true\n    });\n  }\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","LoginComponent","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵlistener","LoginComponent_Template_form_submit_9_listener","loginFun","ɵɵadvance","ɵɵproperty","loginForm","userId","nonNullable","validators","required","password","rememberMe","data","value","pass","get","remember","getRawValue","console","log","formData","FormData","append","JSON","stringify","login","subscribe","next","authenticationError","router","getCurrentNavigation","navigate","error"],"sources":["C:\\MMY Project\\MakeMyYatraa\\Frontend\\data0\\src\\app\\Register\\login\\login.component.ts","C:\\MMY Project\\MakeMyYatraa\\Frontend\\data0\\src\\app\\Register\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { LoginServiceService } from '../../Services/login-service.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  loginForm:FormGroup;\n  authenticationError:\n  constructor(private login:LoginServiceService){\n    this.loginForm = new FormGroup({\n      userId: new FormControl('',{ nonNullable: true, validators: [Validators.required]}),\n      password: new FormControl('',{ nonNullable: true, validators: [Validators.required]}),\n      rememberMe: new FormControl(false,{ nonNullable: true, validators: [Validators.required]})\n    })\n  }\n\n  loginFun(){\n   const data=this.loginForm.value;\n   const pass = this.loginForm.get('password')?.value;\n   const remember = this.loginForm.getRawValue();\n    console.log(\"Password\",pass);\n   var formData = new FormData();\n   formData.append(\"password\", JSON.stringify(pass));\n   if(data.userId!='' && data.password!=''){\n    this.login.login(data.userId,formData,remember).subscribe(\n      {\n        next: () => {\n          this.authenticationError = false;\n          if (!this.router.getCurrentNavigation()) {\n            // There were no routing during login (eg from navigationToStoredUrl)\n            this.router.navigate(['']);\n          }\n        },\n        error: () => (this.authenticationError = true),\n      }\n    )  \n   }\n  }\n}\n","\n<head>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatics.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Caveat:wght@500&display=swap\" rel=\"stylesheet\">\n</head>\n<mat-toolbar color=\"primary\">\n    <h1>Make My Yatraa</h1>\n</mat-toolbar>\n<div class=\"a\">\n    <section style=\"text-align: center;\">\n\n    </section>\n<form [formGroup]=\"loginForm\" (submit)=\"loginFun()\" class=\"login-form\">\n        <div><span>LOGIN</span></div><br>\n        <section class=\"example-container\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>ENTER USER ID</mat-label>\n                <input type=\"text\" matInput placeholder=\"Ex. HP005677BT\" formControlName=\"userId\" required>\n            </mat-form-field><br>\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Enter Password</mat-label>\n<input type=\"password\" matInput placeholder=\"Ex. Abc@1234\" formControlName=\"password\" required>\n</mat-form-field><br>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"rememberMe\">\n        <input class=\"form-check-input\" type=\"checkbox\" name=\"rememberMe\" id=\"rememberMe\" formControlName=\"rememberMe\" />\n        <span>Remember me</span>\n      </label>\n    </div>\n    \n    <span>\n    <button mat-raised-button color=\"Warn\" type=\"submit\">LOGIN</button></span>\n    </section>\n</form>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}