{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { map, startWith } from 'rxjs';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nlet AddRoomComponent = class AddRoomComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.separatorKeysCodes = [ENTER, COMMA];\n    this.fruitCtrl = new FormControl('');\n    this.fruits = ['Lemon'];\n    this.allFruits = ['Apple', 'Lemon', 'Lime', 'Orange', 'Strawberry'];\n    this.RoomForm = this.formBuilder.group({\n      roomCatagory: new FormControl('', [Validators.required]),\n      roomType: new FormControl('', [Validators.required]),\n      price: new FormControl('', [Validators.required]),\n      aminitiesList: this.formBuilder.array([this.formBuilder.group({\n        aminity: new FormControl('', [])\n      })])\n    });\n    this.filteredFruits = this.fruitCtrl.valueChanges.pipe(startWith(null), map(fruit => fruit ? this._filter(fruit) : this.allFruits.slice()));\n  }\n  add(event) {\n    const value = (event.value || '').trim();\n    // Add our fruit\n    if (value) {\n      this.fruits.push(value);\n    }\n    // Clear the input value\n    event.chipInput.clear();\n    this.fruitCtrl.setValue(null);\n  }\n  remove(fruit) {\n    const index = this.fruits.indexOf(fruit);\n    if (index >= 0) {\n      this.fruits.splice(index, 1);\n    }\n  }\n  selected(event) {\n    this.fruits.push(event.option.viewValue);\n    this.fruitInput.nativeElement.value = '';\n    this.fruitCtrl.setValue(null);\n  }\n  _filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.allFruits.filter(fruit => fruit.toLowerCase().includes(filterValue));\n  }\n  uploadData() {}\n};\n__decorate([ViewChild('fruitInput')], AddRoomComponent.prototype, \"fruitInput\", void 0);\nAddRoomComponent = __decorate([Component({\n  selector: 'app-add-room',\n  templateUrl: './add-room.component.html',\n  styleUrls: ['./add-room.component.css']\n})], AddRoomComponent);\nexport { AddRoomComponent };","map":{"version":3,"names":["Component","ViewChild","FormControl","Validators","map","startWith","COMMA","ENTER","AddRoomComponent","constructor","formBuilder","separatorKeysCodes","fruitCtrl","fruits","allFruits","RoomForm","group","roomCatagory","required","roomType","price","aminitiesList","array","aminity","filteredFruits","valueChanges","pipe","fruit","_filter","slice","add","event","value","trim","push","chipInput","clear","setValue","remove","index","indexOf","splice","selected","option","viewValue","fruitInput","nativeElement","filterValue","toLowerCase","filter","includes","uploadData","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\MMY Project\\MakeMyYatraa\\Frontend\\data0\\src\\app\\owner-section\\hotel\\add-room\\add-room.component.ts"],"sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Observable, map, startWith } from 'rxjs';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport {MatAutocompleteSelectedEvent, MatAutocompleteModule} from '@angular/material/autocomplete';\n\n@Component({\n  selector: 'app-add-room',\n  templateUrl: './add-room.component.html',\n  styleUrls: ['./add-room.component.css']\n})\nexport class AddRoomComponent {\n  RoomForm:FormGroup;\n\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  fruitCtrl = new FormControl('');\n  filteredFruits: Observable<string[]>;\n  fruits: string[] = ['Lemon'];\n  allFruits: string[] = ['Apple', 'Lemon', 'Lime', 'Orange', 'Strawberry'];\n\n  @ViewChild('fruitInput')\n  fruitInput!: ElementRef<HTMLInputElement>;\n\n  constructor(private formBuilder:FormBuilder) {\n    this.RoomForm = this.formBuilder.group({\n      roomCatagory: new FormControl('',[Validators.required]),\n      roomType: new FormControl('',[Validators.required]),\n      price: new FormControl('',[Validators.required]),\n      aminitiesList: this.formBuilder.array([\n        this.formBuilder.group({\n          aminity: new FormControl('',[])\n        })\n      ])\n    });\n    this.filteredFruits = this.fruitCtrl.valueChanges.pipe(\n      startWith(null),\n      map((fruit: string | null) => (fruit ? this._filter(fruit) : this.allFruits.slice())),\n    );\n  }\n  add(event: MatChipInputEvent): void {\n    const value = (event.value || '').trim();\n\n    // Add our fruit\n    if (value) {\n      this.fruits.push(value);\n    }\n\n    // Clear the input value\n    event.chipInput!.clear();\n\n    this.fruitCtrl.setValue(null);\n  }\n\n  remove(fruit: string): void {\n    const index = this.fruits.indexOf(fruit);\n\n    if (index >= 0) {\n      this.fruits.splice(index, 1);\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.fruits.push(event.option.viewValue);\n    this.fruitInput.nativeElement.value = '';\n    this.fruitCtrl.setValue(null);\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.allFruits.filter(fruit => fruit.toLowerCase().includes(filterValue));\n  }\n  uploadData(){}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}