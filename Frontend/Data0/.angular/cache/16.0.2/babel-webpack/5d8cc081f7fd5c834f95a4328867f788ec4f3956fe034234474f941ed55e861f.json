{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(login) {\n    this.login = login;\n    this.loginForm = new FormGroup({\n      userId: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required]),\n      rememberMe: new FormControl('', [])\n    });\n  }\n  loginFun() {\n    const data = this.loginForm.value;\n    const pass = this.loginForm.get('password')?.value;\n    console.log(\"Password\", pass);\n    var formData = new FormData();\n    formData.append(\"password\", JSON.stringify(pass));\n    if (data.userId != '' && data.password != '') {\n      this.login.login(data.userId, formData).subscribe(x => {\n        alert(\"Logged in Successfully...!!!\");\n        window.location.href = \"/hotel\";\n      }, error => {\n        alert(\"Incorrect UserId Or Password...!!!\");\n      });\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","LoginComponent","constructor","login","loginForm","userId","required","password","rememberMe","loginFun","data","value","pass","get","console","log","formData","FormData","append","JSON","stringify","subscribe","x","alert","window","location","href","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\MMY Project\\MakeMyYatraa\\Frontend\\data0\\src\\app\\Register\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { LoginServiceService } from '../../Services/login-service.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  loginForm:FormGroup;\n  constructor(private login:LoginServiceService){\n    this.loginForm = new FormGroup({\n      userId: new FormControl('',[Validators.required]),\n      password: new FormControl('',[Validators.required]),\n      rememberMe: new FormControl('',[])\n    })\n  }\n\n  loginFun(){\n   const data=this.loginForm.value;\n   const pass = this.loginForm.get('password')?.value;\n    console.log(\"Password\",pass);\n   var formData = new FormData();\n   formData.append(\"password\", JSON.stringify(pass));\n   if(data.userId!='' && data.password!=''){\n    this.login.login(data.userId,formData).subscribe((x:any)=>{\n      alert(\"Logged in Successfully...!!!\");\n      window.location.href=\"/hotel\";\n    },error=>{\n      alert(\"Incorrect UserId Or Password...!!!\")\n    })  \n   }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAQnE,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAEzBC,YAAoBC,KAAyB;IAAzB,KAAAA,KAAK,GAALA,KAAK;IACvB,IAAI,CAACC,SAAS,GAAG,IAAIL,SAAS,CAAC;MAC7BM,MAAM,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACM,QAAQ,CAAC,CAAC;MACjDC,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACM,QAAQ,CAAC,CAAC;MACnDE,UAAU,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAC,EAAE;KAClC,CAAC;EACJ;EAEAW,QAAQA,CAAA;IACP,MAAMC,IAAI,GAAC,IAAI,CAACN,SAAS,CAACO,KAAK;IAC/B,MAAMC,IAAI,GAAG,IAAI,CAACR,SAAS,CAACS,GAAG,CAAC,UAAU,CAAC,EAAEF,KAAK;IACjDG,OAAO,CAACC,GAAG,CAAC,UAAU,EAACH,IAAI,CAAC;IAC7B,IAAII,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC7BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC,CAAC;IACjD,IAAGF,IAAI,CAACL,MAAM,IAAE,EAAE,IAAIK,IAAI,CAACH,QAAQ,IAAE,EAAE,EAAC;MACvC,IAAI,CAACJ,KAAK,CAACA,KAAK,CAACO,IAAI,CAACL,MAAM,EAACW,QAAQ,CAAC,CAACK,SAAS,CAAEC,CAAK,IAAG;QACxDC,KAAK,CAAC,8BAA8B,CAAC;QACrCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAC,QAAQ;MAC/B,CAAC,EAACC,KAAK,IAAE;QACPJ,KAAK,CAAC,oCAAoC,CAAC;MAC7C,CAAC,CAAC;;EAEJ;CACD;AAzBYtB,cAAc,GAAA2B,UAAA,EAL1B/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW9B,cAAc,CAyB1B;SAzBYA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}