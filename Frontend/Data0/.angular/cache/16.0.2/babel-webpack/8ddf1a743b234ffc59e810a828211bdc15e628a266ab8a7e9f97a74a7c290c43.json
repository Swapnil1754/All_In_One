{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/Services/hotel.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/platform-browser\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/grid-list\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"../../../image/image.component\";\nfunction GetHotelComponent_mat_grid_tile_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\")(1, \"mat-card\")(2, \"mat-card-content\");\n    i0.ɵɵelement(3, \"app-image\", 3)(4, \"br\");\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"br\");\n    i0.ɵɵelementStart(8, \"span\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"br\")(11, \"br\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const l_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"image\", l_r1.image);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(l_r1.hotelName);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(l_r1.city);\n  }\n}\nclass GetHotelComponent {\n  constructor(formBuilder, hotelService, activate, sanitizer) {\n    this.formBuilder = formBuilder;\n    this.hotelService = hotelService;\n    this.activate = activate;\n    this.sanitizer = sanitizer;\n    this.hotel = [];\n    // this.getHotelForm = formBuilder.group({\n    //   registrationId: new FormControl('', []),\n    //   hotelName: new FormControl('',[]),\n    //   ownerName: new FormControl('',[]),\n    //   city: new FormControl('',[]),\n    //   rating: new FormControl('',[]),\n    //   image: new FormControl('',[]),\n    //   menus: formBuilder.array([\n    //     formBuilder.group({\n    //       itemName: new FormControl('',[]),\n    //       price: new FormControl('',[]),\n    //       ratings: new FormControl('',[]),\n    //       image: new FormControl('',[])\n    //     }\n    //     )\n    //   ]),\n    //   rooms: formBuilder.array([\n    //     formBuilder.group({\n    //       roomId: new FormControl('',[]),\n    //       roomCatagory: new FormControl('',[]),\n    //       roomType: new FormControl('',[]),\n    //       price: new FormControl('',[]),\n    //       images: new FormControl('',[]),\n    //       aminitiesList: formBuilder.array([\n    //         formBuilder.group({\n    //           aminity: new FormControl('',[])\n    //         })\n    //       ])\n    //     })\n    //   ])\n    // })\n  }\n\n  ngOnInit() {\n    localStorage.setItem('ownerName', 'Rohit Sharma');\n    this.activate.paramMap.subscribe(x => {\n      let a = localStorage.getItem('ownerName');\n      this.hotelService.getHotelByOwnerName(a).subscribe(b => {\n        this.hotel = b;\n        this.hotel.forEach(element => {\n          this.data = 'data:image/jpg;base64,' + element.image;\n          console.log('Hotel', element.hotelName);\n          this.getHotelForm.get('registrationId')?.setValue(element.registrationId);\n          this.getHotelForm.get('hotelName')?.setValue(element.hotelName);\n          this.getHotelForm.get('ownerName')?.setValue(element.ownerName);\n          this.getHotelForm.get('city')?.setValue(element.city);\n          let imageData = 'data:image/jpeg;base64,' + element.image;\n          console.log('image', imageData);\n          this.thumbnail = this.sanitizer.bypassSecurityTrustUrl(imageData);\n        });\n      });\n    });\n  }\n}\nGetHotelComponent.ɵfac = function GetHotelComponent_Factory(t) {\n  return new (t || GetHotelComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HotelService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.DomSanitizer));\n};\nGetHotelComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GetHotelComponent,\n  selectors: [[\"app-get-hotel\"]],\n  decls: 5,\n  vars: 3,\n  consts: [[\"enctype\", \"multipart/form-data\", 3, \"formGroup\"], [\"cols\", \"4\", \"rowHeight\", \"270px\"], [4, \"ngFor\", \"ngForOf\"], [3, \"image\"]],\n  template: function GetHotelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"h1\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"mat-grid-list\", 1);\n      i0.ɵɵtemplate(4, GetHotelComponent_mat_grid_tile_4_Template, 12, 3, \"mat-grid-tile\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.getHotelForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.getHotelForm.get(\"ownerName\").value);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.hotel);\n    }\n  },\n  dependencies: [i5.NgForOf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i6.MatGridList, i6.MatGridTile, i7.MatCard, i7.MatCardContent, i8.ImageComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { GetHotelComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","l_r1","image","ɵɵtextInterpolate","hotelName","city","GetHotelComponent","constructor","formBuilder","hotelService","activate","sanitizer","hotel","ngOnInit","localStorage","setItem","paramMap","subscribe","x","a","getItem","getHotelByOwnerName","b","forEach","element","data","console","log","getHotelForm","get","setValue","registrationId","ownerName","imageData","thumbnail","bypassSecurityTrustUrl","ɵɵdirectiveInject","i1","FormBuilder","i2","HotelService","i3","ActivatedRoute","i4","DomSanitizer","selectors","decls","vars","consts","template","GetHotelComponent_Template","rf","ctx","ɵɵtemplate","GetHotelComponent_mat_grid_tile_4_Template","value"],"sources":["C:\\MMY Project\\MakeMyYatraa\\Frontend\\Data0\\src\\app\\owner-section\\hotel\\get-hotel\\get-hotel.component.ts","C:\\MMY Project\\MakeMyYatraa\\Frontend\\Data0\\src\\app\\owner-section\\hotel\\get-hotel\\get-hotel.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { Hotel } from 'src/app/Domain/General-Domain/Hotel';\nimport { HotelService } from 'src/app/Services/hotel.service';\n\n@Component({\n  selector: 'app-get-hotel',\n  templateUrl: './get-hotel.component.html',\n  styleUrls: ['./get-hotel.component.css']\n})\nexport class GetHotelComponent implements OnInit{\n  getHotelForm: FormGroup;\n  thumbnail: any;\n  constructor(private formBuilder:FormBuilder, private hotelService: HotelService,private activate: ActivatedRoute, private sanitizer: DomSanitizer) {\n    // this.getHotelForm = formBuilder.group({\n    //   registrationId: new FormControl('', []),\n    //   hotelName: new FormControl('',[]),\n    //   ownerName: new FormControl('',[]),\n    //   city: new FormControl('',[]),\n    //   rating: new FormControl('',[]),\n    //   image: new FormControl('',[]),\n    //   menus: formBuilder.array([\n    //     formBuilder.group({\n    //       itemName: new FormControl('',[]),\n    //       price: new FormControl('',[]),\n    //       ratings: new FormControl('',[]),\n    //       image: new FormControl('',[])\n    //     }\n    //     )\n    //   ]),\n    //   rooms: formBuilder.array([\n    //     formBuilder.group({\n    //       roomId: new FormControl('',[]),\n    //       roomCatagory: new FormControl('',[]),\n    //       roomType: new FormControl('',[]),\n    //       price: new FormControl('',[]),\n    //       images: new FormControl('',[]),\n    //       aminitiesList: formBuilder.array([\n    //         formBuilder.group({\n    //           aminity: new FormControl('',[])\n    //         })\n    //       ])\n    //     })\n    //   ])\n    // })\n  }\n  data:any;\n  hotel: Hotel[] = [];\n  ngOnInit(): void {\n    localStorage.setItem('ownerName', 'Rohit Sharma');\n    this.activate.paramMap.subscribe((x)=>{\n      let a = localStorage.getItem('ownerName');\n      this.hotelService.getHotelByOwnerName(a).subscribe(b=>{\n        this.hotel=b;\n        this.hotel.forEach(element => {\n        this.data='data:image/jpg;base64,' +element.image;\n        console.log('Hotel', element.hotelName);\n        this.getHotelForm.get('registrationId')?.setValue(element.registrationId);\n        this.getHotelForm.get('hotelName')?.setValue(element.hotelName);\n        this.getHotelForm.get('ownerName')?.setValue(element.ownerName);\n        this.getHotelForm.get('city')?.setValue(element.city);\n        let imageData = 'data:image/jpeg;base64,'+element.image;\n        console.log('image', imageData)\n        this.thumbnail = this.sanitizer.bypassSecurityTrustUrl(imageData);\n        })\n      })\n    })\n  }\n}\n","<form [formGroup]=\"getHotelForm\" enctype=\"multipart/form-data\">\n    <h1>{{ getHotelForm.get('ownerName').value}}</h1>\n    <mat-grid-list cols=\"4\" rowHeight=\"270px\">\n    <mat-grid-tile *ngFor=\"let l of hotel; let i=index\">\n    <mat-card>\n    <mat-card-content>\n    <!-- <img mat-card-lg-image [src]=\"data\"> -->\n    <app-image [image]=\"l.image\"></app-image><br>\n    <span>{{l.hotelName}}</span><br>\n    <span>{{l.city}}</span><br><br>\n    </mat-card-content>\n    </mat-card>\n</mat-grid-tile>\n</mat-grid-list>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}