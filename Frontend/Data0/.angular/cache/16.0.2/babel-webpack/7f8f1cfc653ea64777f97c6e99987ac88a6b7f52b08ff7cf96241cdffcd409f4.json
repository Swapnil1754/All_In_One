{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet HotelComponent = class HotelComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.image = File;\n    this.HotelForm = new FormGroup({\n      registrationId: new FormControl('', [Validators.required]),\n      hotelName: new FormControl('', [Validators.required]),\n      city: new FormControl('', [Validators.required]),\n      rating: new FormControl('', [Validators.required]),\n      menus: formBuilder.array([formBuilder.group({\n        itemId: new FormControl('', [Validators.required]),\n        itemName: new FormControl('', [Validators.required]),\n        price: new FormControl('', [Validators.required]),\n        ratings: new FormControl('', [Validators.required])\n      })]),\n      rooms: formBuilder.array([formBuilder.group({\n        roomId: new FormControl('', [Validators.required]),\n        roomCatagory: new FormControl('', [Validators.required]),\n        roomType: new FormControl('', [Validators.required]),\n        price: new FormControl('', [Validators.required]),\n        aminitiesList: formBuilder.array([formBuilder.group({\n          aminity: new FormControl('', [Validators.required])\n        })])\n      })])\n    });\n  }\n  onSelectFile(event) {\n    const imageFile = event.target.files[0];\n    this.image = imageFile;\n  }\n  uploadData() {\n    var formData = new FormData();\n    formData.append(\"file\", JSON.stringify(this.image));\n    formData.append(\"data\", this.HotelForm.value);\n  }\n};\nHotelComponent = __decorate([Component({\n  selector: 'app-hotel',\n  templateUrl: './hotel.component.html',\n  styleUrls: ['./hotel.component.css']\n})], HotelComponent);\nexport { HotelComponent };","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","HotelComponent","constructor","formBuilder","image","File","HotelForm","registrationId","required","hotelName","city","rating","menus","array","group","itemId","itemName","price","ratings","rooms","roomId","roomCatagory","roomType","aminitiesList","aminity","onSelectFile","event","imageFile","target","files","uploadData","formData","FormData","append","JSON","stringify","value","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\MyData\\data0\\src\\app\\hotel\\hotel.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-hotel',\n  templateUrl: './hotel.component.html',\n  styleUrls: ['./hotel.component.css']\n})\nexport class HotelComponent {\nHotelForm:FormGroup;\nimage:any=File;\nconstructor(private formBuilder: FormBuilder){\n  this.HotelForm = new FormGroup({\n    registrationId: new FormControl('', [Validators.required]),\n    hotelName: new FormControl('',[Validators.required]),\n    city: new FormControl('', [Validators.required]),\n    rating: new FormControl('',[Validators.required]),\n    menus: formBuilder.array([\n      formBuilder.group({\n        itemId: new FormControl('', [Validators.required]),\n        itemName: new FormControl('', [Validators.required]),\n        price: new FormControl('', [Validators.required]),\n        ratings: new FormControl('', [Validators.required])\n      })\n    ]),\n    rooms: formBuilder.array([\n      formBuilder.group({\n        roomId: new FormControl('', [Validators.required]),\n        roomCatagory: new FormControl('', [Validators.required]),\n        roomType: new FormControl('', [Validators.required]),\n        price: new FormControl('', [Validators.required]),\n        aminitiesList: formBuilder.array([\n          formBuilder.group({\n            aminity: new FormControl('', [Validators.required])\n          })\n        ])\n      })\n    ])\n  })\n}\nonSelectFile(event:any){\n  const imageFile = event.target.files[0];\n  this.image = imageFile;\n}\nuploadData(){\n  var formData = new FormData;\n  formData.append(\"file\", JSON.stringify(this.image));\n  formData.append(\"data\", this.HotelForm.value);\n}\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAsBC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAOhF,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAG3BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAD/B,KAAAC,KAAK,GAAKC,IAAI;IAEZ,IAAI,CAACC,SAAS,GAAG,IAAIP,SAAS,CAAC;MAC7BQ,cAAc,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;MAC1DC,SAAS,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;MACpDE,IAAI,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;MAChDG,MAAM,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;MACjDI,KAAK,EAAET,WAAW,CAACU,KAAK,CAAC,CACvBV,WAAW,CAACW,KAAK,CAAC;QAChBC,MAAM,EAAE,IAAIjB,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;QAClDQ,QAAQ,EAAE,IAAIlB,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;QACpDS,KAAK,EAAE,IAAInB,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;QACjDU,OAAO,EAAE,IAAIpB,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC;OACnD,CAAC,CACH,CAAC;MACFW,KAAK,EAAEhB,WAAW,CAACU,KAAK,CAAC,CACvBV,WAAW,CAACW,KAAK,CAAC;QAChBM,MAAM,EAAE,IAAItB,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;QAClDa,YAAY,EAAE,IAAIvB,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;QACxDc,QAAQ,EAAE,IAAIxB,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;QACpDS,KAAK,EAAE,IAAInB,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;QACjDe,aAAa,EAAEpB,WAAW,CAACU,KAAK,CAAC,CAC/BV,WAAW,CAACW,KAAK,CAAC;UAChBU,OAAO,EAAE,IAAI1B,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC;SACnD,CAAC,CACH;OACF,CAAC,CACH;KACF,CAAC;EACJ;EACAiB,YAAYA,CAACC,KAAS;IACpB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACvC,IAAI,CAACzB,KAAK,GAAGuB,SAAS;EACxB;EACAG,UAAUA,CAAA;IACR,IAAIC,QAAQ,GAAG,IAAIC,QAAQ;IAC3BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC/B,KAAK,CAAC,CAAC;IACnD2B,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC3B,SAAS,CAAC8B,KAAK,CAAC;EAC/C;CACC;AAzCYnC,cAAc,GAAAoC,UAAA,EAL1BxC,SAAS,CAAC;EACTyC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWvC,cAAc,CAyC1B;SAzCYA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}