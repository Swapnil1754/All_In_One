{"ast":null,"code":"export class AuthGuard {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.auth.isAuthenticated()) {\n      return true;\n    } else alert(\"You Need To Login First...!!!\");\n    this.router.navigate(['login']);\n    return false;\n  }\n}","map":{"version":3,"names":["AuthGuard","constructor","auth","router","canActivate","route","state","isAuthenticated","alert","navigate"],"sources":["C:\\MMY Project\\MakeMyYatraa\\Frontend\\Data0\\src\\app\\Guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginServiceService } from '../Services/login-service.service';\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: LoginServiceService, private router: Router){}\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n    if(this.auth.isAuthenticated()) {\n      return true;\n    }else\n    alert(\"You Need To Login First...!!!\")\n    this.router.navigate(['login'])\n     return false;\n  }\n  \n}\n"],"mappings":"AAIA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,IAAyB,EAAUC,MAAc;IAAjD,KAAAD,IAAI,GAAJA,IAAI;IAA+B,KAAAC,MAAM,GAANA,MAAM;EAAU;EACvEC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IACnE,IAAG,IAAI,CAACJ,IAAI,CAACK,eAAe,EAAE,EAAE;MAC9B,OAAO,IAAI;KACZ,MACDC,KAAK,CAAC,+BAA+B,CAAC;IACtC,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC9B,OAAO,KAAK;EACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}