{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EMAIL_ALREADY_USED_TYPE, LOGIN_ALREADY_USED_TYPE } from '../../Configuration/error.Constants';\nlet RegistrationComponent = class RegistrationComponent {\n  constructor(loginService) {\n    this.loginService = loginService;\n    this.noMatch = false;\n    this.error = false;\n    this.errorEmailExists = false;\n    this.errorUserExists = false;\n    this.success = false;\n    this.RegisterForm = new FormGroup({\n      name1: new FormControl('', [Validators.required]),\n      mobNo: new FormControl('', [Validators.required, mobileNoValidator()]),\n      isOwner: new FormControl('', []),\n      email: new FormControl('', [Validators.required, emailValidator()]),\n      password: new FormControl('', [Validators.required, Validators.minLength(8), Validators.maxLength(20), passwordValidator()]),\n      confirmPassword: new FormControl('', [Validators.required]),\n      city: new FormControl('', [Validators.required])\n    });\n  }\n  ngAfterViewInit() {\n    if (this.name1) {\n      this.name1.nativeElement.focus();\n    }\n  }\n  regFun() {\n    const {\n      password,\n      confirmPassword\n    } = this.RegisterForm.getRawValue();\n    if (password !== confirmPassword) {\n      this.noMatch = true;\n      alert(\"Success\");\n    } else {\n      alert(\"done\");\n      const data = this.RegisterForm.value;\n      this.loginService.register(data).subscribe({\n        next: () => this.success = true,\n        error: response => this.processError(response)\n      });\n      window.location.href = \"/login\";\n    }\n  }\n  processError(response) {\n    if (response.status === 400 && response.error.type === LOGIN_ALREADY_USED_TYPE) {\n      this.errorUserExists = true;\n    } else if (response.status === 400 && response.error.type === EMAIL_ALREADY_USED_TYPE) {\n      this.errorEmailExists = true;\n    } else {\n      this.error = true;\n    }\n  }\n};\n__decorate([ViewChild('name1', {\n  static: false\n})], RegistrationComponent.prototype, \"name1\", void 0);\nRegistrationComponent = __decorate([Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})], RegistrationComponent);\nexport { RegistrationComponent };\nexport function emailValidator() {\n  return control => {\n    const emailPattern = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\n    const valid = emailPattern.test(control.value);\n    if (control.value) {\n      return valid ? null : {\n        invalidEmail: true\n      };\n    }\n    return null;\n  };\n}\nexport function passwordValidator() {\n  return control => {\n    const passwordPattern = /^[A-Za-z+_.-]+@[0-9]{1,}$/;\n    const valid = passwordPattern.test(control.value);\n    if (control.value) {\n      return valid ? null : {\n        invalidPassword: true\n      };\n    }\n    return null;\n  };\n}\nexport function mobileNoValidator() {\n  return control => {\n    const mobileNoPattern = /[+](91)[0-9]{10}$/;\n    const valid = mobileNoPattern.test(control.value);\n    if (control.value) {\n      return valid ? null : {\n        invalidMobileNo: true\n      };\n    }\n    return null;\n  };\n}","map":{"version":3,"names":["Component","ViewChild","FormControl","FormGroup","Validators","EMAIL_ALREADY_USED_TYPE","LOGIN_ALREADY_USED_TYPE","RegistrationComponent","constructor","loginService","noMatch","error","errorEmailExists","errorUserExists","success","RegisterForm","name1","required","mobNo","mobileNoValidator","isOwner","email","emailValidator","password","minLength","maxLength","passwordValidator","confirmPassword","city","ngAfterViewInit","nativeElement","focus","regFun","getRawValue","alert","data","value","register","subscribe","next","response","processError","window","location","href","status","type","__decorate","static","selector","templateUrl","styleUrls","control","emailPattern","valid","test","invalidEmail","passwordPattern","invalidPassword","mobileNoPattern","invalidMobileNo"],"sources":["C:\\MMY Project\\MakeMyYatraa\\Frontend\\data0\\src\\app\\Register\\registration\\registration.component.ts"],"sourcesContent":["import { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { LoginServiceService } from '../../Services/login-service.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { EMAIL_ALREADY_USED_TYPE, LOGIN_ALREADY_USED_TYPE } from '../../Configuration/error.Constants';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements AfterViewInit {\n  @ViewChild('name1', { static: false })\n  name1?: ElementRef;\nRegisterForm:FormGroup;\nnoMatch: boolean=false;\nerror = false;\nerrorEmailExists = false;\nerrorUserExists = false;\nsuccess = false;\nconstructor(private loginService:LoginServiceService){\n  this.RegisterForm = new FormGroup({\n    name1:new FormControl('',[Validators.required]),\n    mobNo:new FormControl('',[Validators.required,mobileNoValidator()]),\n    isOwner:new FormControl('',[]),\n    email:new FormControl('',[Validators.required,emailValidator()]),\n    password: new FormControl('',[Validators.required,Validators.minLength(8),Validators.maxLength(20),passwordValidator()]),\n    confirmPassword: new FormControl('',[Validators.required]),\n    city:new FormControl('',[Validators.required])\n  })\n}\n  ngAfterViewInit(): void {\n    if(this.name1) {\n      this.name1.nativeElement.focus();\n    }\n  }\nregFun(){\n  const {password, confirmPassword} = this.RegisterForm.getRawValue();\n  if(password !== confirmPassword){\n     this.noMatch = true;\n     alert(\"Success\");\n  }else{\n    alert(\"done\")\n  const data = this.RegisterForm.value;\n  this.loginService.register(data).subscribe({ next: () => (this.success = true), error: response => this.processError(response) })\n  window.location.href=\"/login\";\n\n}\n}\nprivate processError(response: HttpErrorResponse): void {\n  if (response.status === 400 && response.error.type === LOGIN_ALREADY_USED_TYPE) {\n    this.errorUserExists = true;\n  } else if (response.status === 400 && response.error.type === EMAIL_ALREADY_USED_TYPE) {\n    this.errorEmailExists = true;\n  } else {\n    this.error = true;\n  }\n}\n}\nexport function emailValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const emailPattern = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\n    const valid = emailPattern.test(control.value);\n    if(control.value){\n    return valid ? null : { invalidEmail: true };\n    }return null;\n  };\n}\nexport function passwordValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const passwordPattern = /^[A-Za-z+_.-]+@[0-9]{1,}$/;\n    const valid = passwordPattern.test(control.value);\n    if(control.value){\n    return valid ? null : { invalidPassword: true}\n  }return null;\n}\n}\n\nexport function mobileNoValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any} | null => {\n    const mobileNoPattern = /[+](91)[0-9]{10}$/;\n    const valid = mobileNoPattern.test(control.value);\n    if(control.value){\n    return valid ? null : { invalidMobileNo: true}\n    }return null;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}