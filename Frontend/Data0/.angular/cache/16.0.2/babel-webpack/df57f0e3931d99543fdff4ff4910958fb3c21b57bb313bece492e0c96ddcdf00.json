{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/login-service.service\";\nimport * as i2 from \"@angular/router\";\nclass AuthGuard {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.auth.isAuthenticated()) {\n      return true;\n    } else alert(\"You Need To Login First...!!!\");\n    this.router.navigate(['login']);\n    return false;\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.LoginServiceService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac\n});\nexport { AuthGuard };","map":{"version":3,"names":["AuthGuard","constructor","auth","router","canActivate","route","state","isAuthenticated","alert","navigate","i0","ɵɵinject","i1","LoginServiceService","i2","Router","factory","ɵfac"],"sources":["C:\\MMY Project\\MakeMyYatraa\\Frontend\\Data0\\src\\app\\Guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginServiceService } from '../Services/login-service.service';\n@Injectable({\n  \n})\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: LoginServiceService, private router: Router){}\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n    if(this.auth.isAuthenticated()) {\n      return true;\n    }else\n    alert(\"You Need To Login First...!!!\")\n    this.router.navigate(['login'])\n     return false;\n  }\n  \n}\n"],"mappings":";;;AAIA,MAGaA,SAAS;EACpBC,YAAoBC,IAAyB,EAAUC,MAAc;IAAjD,KAAAD,IAAI,GAAJA,IAAI;IAA+B,KAAAC,MAAM,GAANA,MAAM;EAAU;EACvEC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IACnE,IAAG,IAAI,CAACJ,IAAI,CAACK,eAAe,EAAE,EAAE;MAC9B,OAAO,IAAI;KACZ,MACDC,KAAK,CAAC,+BAA+B,CAAC;IACtC,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC9B,OAAO,KAAK;EACf;;AATWT,SAAS,C;mBAATA,SAAS,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,mBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAATf,SAAS,C;SAATA,SAAS;EAAAgB,OAAA,EAAThB,SAAS,CAAAiB;AAAA;SAATjB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}