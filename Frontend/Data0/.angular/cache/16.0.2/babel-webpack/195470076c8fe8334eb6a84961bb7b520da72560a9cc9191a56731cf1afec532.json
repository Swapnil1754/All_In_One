{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/login-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/toolbar\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/radio\";\nfunction RegistrationComponent_mat_error_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Name is Mandatory...!!!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Invalid Mobile Number...!!!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_mat_error_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Email is Mandatory...!!!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_mat_error_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Invalid Email Format...!!!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_mat_error_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Password is Mandatory...!!!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_mat_error_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Invalid Password...!!!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_mat_error_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Password is too Short...!!!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_mat_error_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Password is too Large...!!!\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass RegistrationComponent {\n  constructor(loginService) {\n    this.loginService = loginService;\n    this.RegisterForm = new FormGroup({\n      name1: new FormControl('', [Validators.required]),\n      mobNo: new FormControl('', [Validators.required, mobileNoValidator()]),\n      isOwner: new FormControl('', []),\n      email: new FormControl('', [Validators.required, emailValidator()]),\n      password: new FormControl('', [Validators.required, Validators.minLength(8), Validators.maxLength(20), passwordValidator()]),\n      password1: new FormControl('', [Validators.required]),\n      city: new FormControl('', [Validators.required])\n    });\n  }\n  regFun() {\n    const data = this.RegisterForm.value;\n    // this.loginService.register(data).subscribe((x:any)=>{\n    console.log(data);\n    alert(\"Register Successfully...!!!\");\n    // window.location.href=\"/login\";\n    // })\n  }\n}\n\nRegistrationComponent.ɵfac = function RegistrationComponent_Factory(t) {\n  return new (t || RegistrationComponent)(i0.ɵɵdirectiveInject(i1.LoginServiceService));\n};\nRegistrationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistrationComponent,\n  selectors: [[\"app-registration\"]],\n  decls: 72,\n  vars: 10,\n  consts: [[\"rel\", \"preconnect\", \"href\", \"https://fonts.googleapis.com\"], [\"rel\", \"preconnect\", \"href\", \"https://fonts.gstatics.com\", \"crossorigin\", \"\"], [\"href\", \"https://fonts.googleapis.com/css2?family=Caveat:wght@500&display=swap\", \"rel\", \"stylesheet\"], [\"color\", \"primary\"], [1, \"a\"], [2, \"text-align\", \"center\"], [1, \"login-form\", 3, \"formGroup\", \"submit\"], [1, \"example-container\"], [\"appearance\", \"outline\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Ex. Ramesh Powar\", \"formControlName\", \"name1\", \"required\", \"\"], [4, \"ngIf\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Ex. +918823878743\", \"formControlName\", \"mobNo\", \"required\", \"\"], [\"type\", \"email\", \"matInput\", \"\", \"placeholder\", \"Ex. abc12@gmail.com\", \"formControlName\", \"email\", \"required\", \"\"], [\"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"Ex. Abc@1234\", \"formControlName\", \"password\", \"required\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Ex. Abc@1234\", \"formControlName\", \"password1\", \"required\", \"\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Ex.Mumbai\", \"formControlName\", \"city\", \"required\", \"\"], [1, \"example-margin\"], [\"formControlName\", \"isOwner\"], [\"value\", \"true\", 1, \"example-margin\"], [\"value\", \"false\", 1, \"example-margin\"], [\"mat-raised-button\", \"\", \"color\", \"Warn\", \"type\", \"submit\", 3, \"disabled\"]],\n  template: function RegistrationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"head\");\n      i0.ɵɵelement(1, \"link\", 0)(2, \"link\", 1)(3, \"link\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"mat-toolbar\", 3)(5, \"h1\");\n      i0.ɵɵtext(6, \"Make My Yatraa\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4);\n      i0.ɵɵelement(8, \"section\", 5);\n      i0.ɵɵelementStart(9, \"form\", 6);\n      i0.ɵɵlistener(\"submit\", function RegistrationComponent_Template_form_submit_9_listener() {\n        return ctx.regFun();\n      });\n      i0.ɵɵelementStart(10, \"div\")(11, \"span\");\n      i0.ɵɵtext(12, \"REGISTRATION FORM\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(13, \"br\");\n      i0.ɵɵelementStart(14, \"section\", 7)(15, \"mat-form-field\", 8)(16, \"mat-label\");\n      i0.ɵɵtext(17, \"Enter Your Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 9);\n      i0.ɵɵtemplate(19, RegistrationComponent_mat_error_19_Template, 2, 0, \"mat-error\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"br\")(21, \"br\");\n      i0.ɵɵelementStart(22, \"mat-form-field\", 8)(23, \"mat-label\");\n      i0.ɵɵtext(24, \"Enter Mobile No.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 11);\n      i0.ɵɵtemplate(26, RegistrationComponent_mat_error_26_Template, 2, 0, \"mat-error\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"br\")(28, \"br\");\n      i0.ɵɵelementStart(29, \"mat-form-field\", 8)(30, \"mat-label\");\n      i0.ɵɵtext(31, \"Enter Valid Email Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"input\", 12);\n      i0.ɵɵtemplate(33, RegistrationComponent_mat_error_33_Template, 2, 0, \"mat-error\", 10);\n      i0.ɵɵtemplate(34, RegistrationComponent_mat_error_34_Template, 2, 0, \"mat-error\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"br\")(36, \"br\");\n      i0.ɵɵelementStart(37, \"mat-form-field\", 8)(38, \"mat-label\");\n      i0.ɵɵtext(39, \"Enter Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(40, \"input\", 13);\n      i0.ɵɵtemplate(41, RegistrationComponent_mat_error_41_Template, 2, 0, \"mat-error\", 10);\n      i0.ɵɵtemplate(42, RegistrationComponent_mat_error_42_Template, 2, 0, \"mat-error\", 10);\n      i0.ɵɵtemplate(43, RegistrationComponent_mat_error_43_Template, 2, 0, \"mat-error\", 10);\n      i0.ɵɵtemplate(44, RegistrationComponent_mat_error_44_Template, 2, 0, \"mat-error\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(45, \"br\")(46, \"br\");\n      i0.ɵɵelementStart(47, \"mat-form-field\", 8)(48, \"mat-label\");\n      i0.ɵɵtext(49, \"Confirm Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(50, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(51, \"br\")(52, \"br\");\n      i0.ɵɵelementStart(53, \"mat-form-field\", 8)(54, \"mat-label\");\n      i0.ɵɵtext(55, \"Enter Your City name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(56, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(57, \"br\")(58, \"br\");\n      i0.ɵɵelementStart(59, \"span\")(60, \"label\", 16);\n      i0.ɵɵtext(61, \"Register As:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(62, \"mat-radio-group\", 17)(63, \"mat-radio-button\", 18);\n      i0.ɵɵtext(64, \"Owner\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(65, \"mat-radio-button\", 19);\n      i0.ɵɵtext(66, \"Customer\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(67, \"br\")(68, \"br\");\n      i0.ɵɵelementStart(69, \"span\")(70, \"button\", 20);\n      i0.ɵɵtext(71, \"Register\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.RegisterForm);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.RegisterForm.controls[\"name1\"].hasError(\"required\"));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.RegisterForm.controls[\"mobNo\"].hasError(\"invalidMobileNo\"));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.RegisterForm.controls[\"email\"].hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.RegisterForm.controls[\"email\"].hasError(\"invalidEmail\"));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.RegisterForm.controls[\"password\"].hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.RegisterForm.controls[\"password\"].hasError(\"invalidPassword\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.RegisterForm.controls[\"password\"].hasError(\"minlength\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.RegisterForm.controls[\"password\"].hasError(\"maxlength\"));\n      i0.ɵɵadvance(26);\n      i0.ɵɵproperty(\"disabled\", ctx.RegisterForm.invalid);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName, i4.MatToolbar, i5.MatFormField, i5.MatLabel, i5.MatError, i6.MatButton, i7.MatInput, i8.MatRadioGroup, i8.MatRadioButton],\n  styles: [\"mat-form-field[_ngcontent-%COMP%]{\\r\\n    width: 300px;height: auto;\\r\\n}\\r\\n.a[_ngcontent-%COMP%]{\\r\\n    width: 100%; background-color: rgb(163, 182, 186);height: -moz-fit-content;height: fit-content;padding: 20px;\\r\\n}\\r\\ndiv[_ngcontent-%COMP%]{\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n.login-form[_ngcontent-%COMP%]{\\r\\n    text-align: center;\\r\\n}\\r\\n.example-full-width[_ngcontent-%COMP%]{\\r\\n    color: white;width: 100%;background-color: black;\\r\\n}\\r\\nmat-label[_ngcontent-%COMP%]{\\r\\n    position: relative;\\r\\n}\\r\\n.example-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]    + mat-form-field[_ngcontent-%COMP%] {\\r\\n    margin-left: 8px;\\r\\n  }\\r\\n  input[_ngcontent-%COMP%]{\\r\\n    border: 0cap;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWSxDQUFDLFlBQVk7QUFDN0I7QUFDQTtJQUNJLFdBQVcsRUFBRSxvQ0FBb0MsQ0FBQyx3QkFBbUIsQ0FBbkIsbUJBQW1CLENBQUMsYUFBYTtBQUN2RjtBQUNBO0lBQ0ksbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLFlBQVksQ0FBQyxXQUFXLENBQUMsdUJBQXVCO0FBQ3BEO0FBQ0E7SUFDSSxrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLGdCQUFnQjtFQUNsQjtFQUNBO0lBQ0UsWUFBWSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGR7XHJcbiAgICB3aWR0aDogMzAwcHg7aGVpZ2h0OiBhdXRvO1xyXG59XHJcbi5he1xyXG4gICAgd2lkdGg6IDEwMCU7IGJhY2tncm91bmQtY29sb3I6IHJnYigxNjMsIDE4MiwgMTg2KTtoZWlnaHQ6IGZpdC1jb250ZW50O3BhZGRpbmc6IDIwcHg7XHJcbn1cclxuZGl2e1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG4ubG9naW4tZm9ybXtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG4uZXhhbXBsZS1mdWxsLXdpZHRoe1xyXG4gICAgY29sb3I6IHdoaXRlO3dpZHRoOiAxMDAlO2JhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG59XHJcbm1hdC1sYWJlbHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG4uZXhhbXBsZS1jb250YWluZXIgbWF0LWZvcm0tZmllbGQgKyBtYXQtZm9ybS1maWVsZCB7XHJcbiAgICBtYXJnaW4tbGVmdDogOHB4O1xyXG4gIH1cclxuICBpbnB1dHtcclxuICAgIGJvcmRlcjogMGNhcDt9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { RegistrationComponent };\nexport function emailValidator() {\n  return control => {\n    const emailPattern = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\n    const valid = emailPattern.test(control.value);\n    return valid ? null : {\n      invalidEmail: true\n    };\n  };\n}\nexport function passwordValidator() {\n  return control => {\n    const passwordPattern = /^[A-Za-z+_.-]+@[0-9]{1,}$/;\n    const valid = passwordPattern.test(control.value);\n    return valid ? null : {\n      invalidPassword: true\n    };\n  };\n}\nexport function confirmPassword() {\n  return contr;\n}\nexport function mobileNoValidator() {\n  return control => {\n    const mobileNoPattern = /[+](91)[0-9]{10}$/;\n    const valid = mobileNoPattern.test(control.value);\n    return valid ? null : {\n      invalidMobileNo: true\n    };\n  };\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","RegistrationComponent","constructor","loginService","RegisterForm","name1","required","mobNo","mobileNoValidator","isOwner","email","emailValidator","password","minLength","maxLength","passwordValidator","password1","city","regFun","data","value","console","log","alert","ɵɵdirectiveInject","i1","LoginServiceService","selectors","decls","vars","consts","template","RegistrationComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","RegistrationComponent_Template_form_submit_9_listener","ɵɵtemplate","RegistrationComponent_mat_error_19_Template","RegistrationComponent_mat_error_26_Template","RegistrationComponent_mat_error_33_Template","RegistrationComponent_mat_error_34_Template","RegistrationComponent_mat_error_41_Template","RegistrationComponent_mat_error_42_Template","RegistrationComponent_mat_error_43_Template","RegistrationComponent_mat_error_44_Template","ɵɵadvance","ɵɵproperty","controls","hasError","invalid","control","emailPattern","valid","test","invalidEmail","passwordPattern","invalidPassword","confirmPassword","contr","mobileNoPattern","invalidMobileNo"],"sources":["C:\\MMY Project\\MakeMyYatraa\\Frontend\\data0\\src\\app\\registration\\registration.component.ts","C:\\MMY Project\\MakeMyYatraa\\Frontend\\data0\\src\\app\\registration\\registration.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { LoginServiceService } from '../Services/login-service.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent {\nRegisterForm:FormGroup;\nconstructor(private loginService:LoginServiceService){\n  this.RegisterForm = new FormGroup({\n    name1:new FormControl('',[Validators.required]),\n    mobNo:new FormControl('',[Validators.required,mobileNoValidator()]),\n    isOwner:new FormControl('',[]),\n    email:new FormControl('',[Validators.required,emailValidator()]),\n    password: new FormControl('',[Validators.required,Validators.minLength(8),Validators.maxLength(20),passwordValidator()]),\n    password1: new FormControl('',[Validators.required]),\n    city:new FormControl('',[Validators.required])\n  })\n}\nregFun(){\n  const data = this.RegisterForm.value;\n  // this.loginService.register(data).subscribe((x:any)=>{\n    console.log(data);\n    alert(\"Register Successfully...!!!\");\n  // window.location.href=\"/login\";\n  // })\n  \n}\n}\nexport function emailValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const emailPattern = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\n    const valid = emailPattern.test(control.value);\n    return valid ? null : { invalidEmail: true };\n  };\n}\nexport function passwordValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const passwordPattern = /^[A-Za-z+_.-]+@[0-9]{1,}$/;\n    const valid = passwordPattern.test(control.value);\n    return valid ? null : { invalidPassword: true}\n  }\n}\nexport function confirmPassword(): ValidatorFn {\n  return (contr)\n}\nexport function mobileNoValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any} | null => {\n    const mobileNoPattern = /[+](91)[0-9]{10}$/;\n    const valid = mobileNoPattern.test(control.value);\n    return valid ? null : { invalidMobileNo: true}\n  }\n}\n","<head>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatics.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Caveat:wght@500&display=swap\" rel=\"stylesheet\">\n</head>\n<mat-toolbar color=\"primary\">\n    <h1>Make My Yatraa</h1>\n</mat-toolbar>\n<div class=\"a\">\n    <section style=\"text-align: center;\">\n\n    </section>\n<form [formGroup]=\"RegisterForm\" (submit)=\"regFun()\" class=\"login-form\">\n        <div><span>REGISTRATION FORM</span></div><br>\n        <section class=\"example-container\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Enter Your Name</mat-label>\n                <input type=\"text\" matInput placeholder=\"Ex. Ramesh Powar\" formControlName=\"name1\" required>\n                <mat-error *ngIf=\"RegisterForm.controls['name1'].hasError('required')\">Name is Mandatory...!!!</mat-error>\n            </mat-form-field><br><br>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Enter Mobile No.</mat-label>\n                <input type=\"text\" matInput placeholder=\"Ex. +918823878743\" formControlName=\"mobNo\" required>\n                <mat-error *ngIf=\"RegisterForm.controls['mobNo'].hasError('invalidMobileNo')\">Invalid Mobile Number...!!!</mat-error>\n            </mat-form-field><br><br>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Enter Valid Email Id</mat-label>\n        <input type=\"email\" matInput placeholder=\"Ex. abc12@gmail.com\" formControlName=\"email\" required>\n        <mat-error *ngIf=\"RegisterForm.controls['email'].hasError('required')\">Email is Mandatory...!!!</mat-error>\n        <mat-error *ngIf=\"RegisterForm.controls['email'].hasError('invalidEmail')\">Invalid Email Format...!!!</mat-error>\n    </mat-form-field>\n    <br><br>\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Enter Password</mat-label>\n<input type=\"password\" matInput placeholder=\"Ex. Abc@1234\" formControlName=\"password\" required>\n<mat-error *ngIf=\"RegisterForm.controls['password'].hasError('required')\">Password is Mandatory...!!!</mat-error>\n<mat-error *ngIf=\"RegisterForm.controls['password'].hasError('invalidPassword')\">Invalid Password...!!!</mat-error>\n<mat-error *ngIf=\"RegisterForm.controls['password'].hasError('minlength')\">Password is too Short...!!!</mat-error>\n<mat-error *ngIf=\"RegisterForm.controls['password'].hasError('maxlength')\">Password is too Large...!!!</mat-error>\n</mat-form-field><br><br>\n<mat-form-field appearance=\"outline\">\n    <mat-label>Confirm Password</mat-label>\n<input matInput placeholder=\"Ex. Abc@1234\" formControlName=\"password1\" required>\n</mat-form-field><br><br>\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Enter Your City name</mat-label>\n        <input type=\"text\" matInput placeholder=\"Ex.Mumbai\" formControlName=\"city\" required>\n    </mat-form-field><br><br>\n    <span>\n        <label class=\"example-margin\">Register As:</label>\n        <mat-radio-group formControlName=\"isOwner\">\n          <mat-radio-button class=\"example-margin\" value=\"true\">Owner</mat-radio-button>\n          <mat-radio-button class=\"example-margin\" value=\"false\">Customer</mat-radio-button>\n        </mat-radio-group></span><br><br>\n\n    <span>\n    <button mat-raised-button color=\"Warn\" type=\"submit\" [disabled]=\"RegisterForm.invalid\">Register</button></span>\n        </section>\n</form>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}