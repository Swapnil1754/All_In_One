{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass LoginServiceService {\n  constructor(httpclient) {\n    this.httpclient = httpclient;\n    this.url = \"http://localhost:9000/api/v1/login\";\n    this.url1 = \"http://localhost:9000/api/v1\";\n  }\n  register(data) {\n    return this.httpclient.post(`${this.url1}/${\"register\"}`, data);\n  }\n  login(data, pass) {\n    return this.httpclient.post(`${this.url}/${data}`, pass).pipe(map(response => this.authenticateUser(response, pass.get('remember'))));\n  }\n  authenticateUser(response, rememberMe) {\n    const jwt = response.id_token;\n    console.log(\"service\", jwt);\n  }\n}\nLoginServiceService.ɵfac = function LoginServiceService_Factory(t) {\n  return new (t || LoginServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nLoginServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginServiceService,\n  factory: LoginServiceService.ɵfac,\n  providedIn: 'root'\n});\nexport { LoginServiceService };","map":{"version":3,"names":["map","LoginServiceService","constructor","httpclient","url","url1","register","data","post","login","pass","pipe","response","authenticateUser","get","rememberMe","jwt","id_token","console","log","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\MMY Project\\MakeMyYatraa\\Frontend\\data0\\src\\app\\Services\\login-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, map } from 'rxjs';\nimport { Reg } from '../Domain/General-Domain/Reg';\ntype JwtToken={\n  id_token:string;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginServiceService {\n  constructor(private httpclient:HttpClient) { }\n  url=\"http://localhost:9000/api/v1/login\";\n  url1=\"http://localhost:9000/api/v1\";\n  register(data:Reg):Observable<Reg>{\n    return this.httpclient.post<Reg>(`${this.url1}/${\"register\"}`,data);\n  }\n  login(data:number,pass:FormData):Observable<Reg>{\n    return this.httpclient.post<any>(`${this.url}/${data}`,pass).\n    pipe(map(response => this.authenticateUser(response, pass.get('remember'))))\n  }\n  private authenticateUser(response: JwtToken, rememberMe: boolean):void {\n    const jwt = response.id_token;\n    console.log(\"service\",jwt);\n  }\n}\n"],"mappings":"AAEA,SAAqBA,GAAG,QAAQ,MAAM;;;AAKtC,MAGaC,mBAAmB;EAC9BC,YAAoBC,UAAqB;IAArB,KAAAA,UAAU,GAAVA,UAAU;IAC9B,KAAAC,GAAG,GAAC,oCAAoC;IACxC,KAAAC,IAAI,GAAC,8BAA8B;EAFU;EAG7CC,QAAQA,CAACC,IAAQ;IACf,OAAO,IAAI,CAACJ,UAAU,CAACK,IAAI,CAAM,GAAG,IAAI,CAACH,IAAI,IAAI,UAAU,EAAE,EAACE,IAAI,CAAC;EACrE;EACAE,KAAKA,CAACF,IAAW,EAACG,IAAa;IAC7B,OAAO,IAAI,CAACP,UAAU,CAACK,IAAI,CAAM,GAAG,IAAI,CAACJ,GAAG,IAAIG,IAAI,EAAE,EAACG,IAAI,CAAC,CAC5DC,IAAI,CAACX,GAAG,CAACY,QAAQ,IAAI,IAAI,CAACC,gBAAgB,CAACD,QAAQ,EAAEF,IAAI,CAACI,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;EAC9E;EACQD,gBAAgBA,CAACD,QAAkB,EAAEG,UAAmB;IAC9D,MAAMC,GAAG,GAAGJ,QAAQ,CAACK,QAAQ;IAC7BC,OAAO,CAACC,GAAG,CAAC,SAAS,EAACH,GAAG,CAAC;EAC5B;;AAdWf,mBAAmB,C;mBAAnBA,mBAAmB,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAnBtB,mBAAmB,C;SAAnBA,mBAAmB;EAAAuB,OAAA,EAAnBvB,mBAAmB,CAAAwB,IAAA;EAAAC,UAAA,EAFlB;AAAM;SAEPzB,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}