export var FileValidator;
(function (FileValidator) {
    /**
     * Function to control content of files
     *
     * @param bytes max number of bytes allowed
     *
     * @returns
     */
    function maxContentSize(bytes) {
        return function (control) {
            var size = control && control.value ? control.value.files.map(function (f) { return f.size; }).reduce(function (acc, i) { return acc + i; }, 0) : 0;
            var condition = bytes >= size;
            return condition
                ? null
                : {
                    maxContentSize: {
                        actualSize: size,
                        maxSize: bytes
                    }
                };
        };
    }
    FileValidator.maxContentSize = maxContentSize;
    /**
     *
     * @description Handles allowed file types by controlling whether some specific extensions matches with the uploaded file type
     * @export
     * @param {string[]} extensions
     * @returns {ValidatorFn}
     */
    function allowedExtensions(extensions) {
        return function (control) {
            var allowed = control &&
                control.value &&
                control.value.files.every(function (file) {
                    var fileNameSplit = file.name.split('.');
                    var extension = fileNameSplit[fileNameSplit.length - 1];
                    var foundIndex = extensions.indexOf(extension);
                    return foundIndex !== -1;
                });
            return allowed
                ? null
                : {
                    allowedExtensions: extensions
                };
        };
    }
    FileValidator.allowedExtensions = allowedExtensions;
})(FileValidator || (FileValidator = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS12YWxpZGF0b3IuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtbWF0LWZpbGUtaW5wdXQvIiwic291cmNlcyI6WyJsaWIvdmFsaWRhdG9yL2ZpbGUtdmFsaWRhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE1BQU0sS0FBVyxhQUFhLENBcUQ3QjtBQXJERCxXQUFpQixhQUFhO0lBQzVCOzs7Ozs7T0FNRztJQUNILFNBQWdCLGNBQWMsQ0FBQyxLQUFhO1FBQzFDLE9BQU8sVUFBQyxPQUF3QjtZQUM5QixJQUFNLElBQUksR0FBRyxPQUFPLElBQUksT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUUsT0FBTyxDQUFDLEtBQW1CLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsQ0FBQyxJQUFJLEVBQU4sQ0FBTSxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQUMsR0FBRyxFQUFFLENBQUMsSUFBSyxPQUFBLEdBQUcsR0FBRyxDQUFDLEVBQVAsQ0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDL0gsSUFBTSxTQUFTLEdBQUcsS0FBSyxJQUFJLElBQUksQ0FBQztZQUNoQyxPQUFPLFNBQVM7Z0JBQ2QsQ0FBQyxDQUFDLElBQUk7Z0JBQ04sQ0FBQyxDQUFDO29CQUNFLGNBQWMsRUFBRTt3QkFDZCxVQUFVLEVBQUUsSUFBSTt3QkFDaEIsT0FBTyxFQUFFLEtBQUs7cUJBQ2Y7aUJBQ0YsQ0FBQztRQUNSLENBQUMsQ0FBQztJQUNKLENBQUM7SUFiZSw0QkFBYyxpQkFhN0IsQ0FBQTtJQUVEOzs7Ozs7T0FNRztJQUNILFNBQWdCLGlCQUFpQixDQUFDLFVBQW9CO1FBQ3BELE9BQU8sVUFBQyxPQUF3QjtZQUM5QixJQUFNLE9BQU8sR0FDWCxPQUFPO2dCQUNQLE9BQU8sQ0FBQyxLQUFLO2dCQUNaLE9BQU8sQ0FBQyxLQUFtQixDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsVUFBQSxJQUFJO29CQUUzQyxJQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQTtvQkFFMUMsSUFBTSxTQUFTLEdBQUcsYUFBYSxDQUFDLGFBQWEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7b0JBRTFELElBQU0sVUFBVSxHQUFHLFVBQVUsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7b0JBRWpELE9BQU8sVUFBVSxLQUFLLENBQUMsQ0FBQyxDQUFDO2dCQUMzQixDQUFDLENBQUMsQ0FBQztZQUVMLE9BQU8sT0FBTztnQkFDWixDQUFDLENBQUMsSUFBSTtnQkFDTixDQUFDLENBQUM7b0JBQ0EsaUJBQWlCLEVBQUUsVUFBVTtpQkFDNUIsQ0FBQztRQUNSLENBQUMsQ0FBQztJQUNKLENBQUM7SUF0QmUsK0JBQWlCLG9CQXNCaEMsQ0FBQTtBQUNILENBQUMsRUFyRGdCLGFBQWEsS0FBYixhQUFhLFFBcUQ3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZhbGlkYXRvckZuLCBBYnN0cmFjdENvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBGaWxlSW5wdXQgfSBmcm9tICcuLi9tb2RlbC9maWxlLWlucHV0Lm1vZGVsJztcblxuZXhwb3J0IG5hbWVzcGFjZSBGaWxlVmFsaWRhdG9yIHtcbiAgLyoqXG4gICAqIEZ1bmN0aW9uIHRvIGNvbnRyb2wgY29udGVudCBvZiBmaWxlc1xuICAgKlxuICAgKiBAcGFyYW0gYnl0ZXMgbWF4IG51bWJlciBvZiBieXRlcyBhbGxvd2VkXG4gICAqXG4gICAqIEByZXR1cm5zXG4gICAqL1xuICBleHBvcnQgZnVuY3Rpb24gbWF4Q29udGVudFNpemUoYnl0ZXM6IG51bWJlcik6IFZhbGlkYXRvckZuIHtcbiAgICByZXR1cm4gKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCk6IHsgW2tleTogc3RyaW5nXTogYW55IH0gfCBudWxsID0+IHtcbiAgICAgIGNvbnN0IHNpemUgPSBjb250cm9sICYmIGNvbnRyb2wudmFsdWUgPyAoY29udHJvbC52YWx1ZSBhcyBGaWxlSW5wdXQpLmZpbGVzLm1hcChmID0+IGYuc2l6ZSkucmVkdWNlKChhY2MsIGkpID0+IGFjYyArIGksIDApIDogMDtcbiAgICAgIGNvbnN0IGNvbmRpdGlvbiA9IGJ5dGVzID49IHNpemU7XG4gICAgICByZXR1cm4gY29uZGl0aW9uXG4gICAgICAgID8gbnVsbFxuICAgICAgICA6IHtcbiAgICAgICAgICAgIG1heENvbnRlbnRTaXplOiB7XG4gICAgICAgICAgICAgIGFjdHVhbFNpemU6IHNpemUsXG4gICAgICAgICAgICAgIG1heFNpemU6IGJ5dGVzXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfTtcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvbiBIYW5kbGVzIGFsbG93ZWQgZmlsZSB0eXBlcyBieSBjb250cm9sbGluZyB3aGV0aGVyIHNvbWUgc3BlY2lmaWMgZXh0ZW5zaW9ucyBtYXRjaGVzIHdpdGggdGhlIHVwbG9hZGVkIGZpbGUgdHlwZVxuICAgKiBAZXhwb3J0XG4gICAqIEBwYXJhbSB7c3RyaW5nW119IGV4dGVuc2lvbnNcbiAgICogQHJldHVybnMge1ZhbGlkYXRvckZufVxuICAgKi9cbiAgZXhwb3J0IGZ1bmN0aW9uIGFsbG93ZWRFeHRlbnNpb25zKGV4dGVuc2lvbnM6IHN0cmluZ1tdKTogVmFsaWRhdG9yRm4ge1xuICAgIHJldHVybiAoY29udHJvbDogQWJzdHJhY3RDb250cm9sKTogeyBba2V5OiBzdHJpbmddOiBhbnkgfSB8IG51bGwgPT4ge1xuICAgICAgY29uc3QgYWxsb3dlZCA9XG4gICAgICAgIGNvbnRyb2wgJiZcbiAgICAgICAgY29udHJvbC52YWx1ZSAmJlxuICAgICAgICAoY29udHJvbC52YWx1ZSBhcyBGaWxlSW5wdXQpLmZpbGVzLmV2ZXJ5KGZpbGUgPT4ge1xuXG4gICAgICAgICAgY29uc3QgZmlsZU5hbWVTcGxpdCA9IGZpbGUubmFtZS5zcGxpdCgnLicpXG5cbiAgICAgICAgICBjb25zdCBleHRlbnNpb24gPSBmaWxlTmFtZVNwbGl0W2ZpbGVOYW1lU3BsaXQubGVuZ3RoIC0gMV07XG5cbiAgICAgICAgICBjb25zdCBmb3VuZEluZGV4ID0gZXh0ZW5zaW9ucy5pbmRleE9mKGV4dGVuc2lvbik7XG5cbiAgICAgICAgICByZXR1cm4gZm91bmRJbmRleCAhPT0gLTE7XG4gICAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gYWxsb3dlZFxuICAgICAgICA/IG51bGxcbiAgICAgICAgOiB7XG4gICAgICAgICAgYWxsb3dlZEV4dGVuc2lvbnM6IGV4dGVuc2lvbnNcbiAgICAgICAgICB9O1xuICAgIH07XG4gIH1cbn1cbiJdfQ==