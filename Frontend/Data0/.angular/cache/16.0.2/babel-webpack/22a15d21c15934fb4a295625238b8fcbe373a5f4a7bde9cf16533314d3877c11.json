{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nlet GetHotelComponent = class GetHotelComponent {\n  constructor(formBuilder, hotelService, activate) {\n    this.formBuilder = formBuilder;\n    this.hotelService = hotelService;\n    this.activate = activate;\n    this.getHotelForm = formBuilder.group({\n      registrationId: new FormControl('', []),\n      hotelName: new FormControl('', []),\n      ownerName: new FormControl('', []),\n      city: new FormControl('', []),\n      rating: new FormControl('', []),\n      image: new FormControl('', []),\n      menus: formBuilder.array([formBuilder.group({\n        itemName: new FormControl('', []),\n        price: new FormControl('', []),\n        ratings: new FormControl('', []),\n        image: new FormControl('', [])\n      })]),\n      rooms: formBuilder.array([formBuilder.group({\n        roomId: new FormControl('', []),\n        roomCatagory: new FormControl('', []),\n        roomType: new FormControl('', []),\n        price: new FormControl('', []),\n        images: new FormControl('', []),\n        aminitiesList: formBuilder.array([formBuilder.group({\n          aminity: new FormControl('', [])\n        })])\n      })])\n    });\n  }\n  ngOnInit() {\n    throw new Error('Method not implemented.');\n  }\n};\nGetHotelComponent = __decorate([Component({\n  selector: 'app-get-hotel',\n  templateUrl: './get-hotel.component.html',\n  styleUrls: ['./get-hotel.component.css']\n})], GetHotelComponent);\nexport { GetHotelComponent };","map":{"version":3,"names":["Component","FormControl","GetHotelComponent","constructor","formBuilder","hotelService","activate","getHotelForm","group","registrationId","hotelName","ownerName","city","rating","image","menus","array","itemName","price","ratings","rooms","roomId","roomCatagory","roomType","images","aminitiesList","aminity","ngOnInit","Error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\MMY Project\\MakeMyYatraa\\Frontend\\Data0\\src\\app\\owner-section\\hotel\\get-hotel\\get-hotel.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { HotelService } from 'src/app/Services/hotel.service';\n\n@Component({\n  selector: 'app-get-hotel',\n  templateUrl: './get-hotel.component.html',\n  styleUrls: ['./get-hotel.component.css']\n})\nexport class GetHotelComponent implements OnInit{\n  getHotelForm: FormGroup;\n  constructor(private formBuilder:FormBuilder, private hotelService: HotelService,private activate: Act) {\n    this.getHotelForm = formBuilder.group({\n      registrationId: new FormControl('', []),\n      hotelName: new FormControl('',[]),\n      ownerName: new FormControl('',[]),\n      city: new FormControl('',[]),\n      rating: new FormControl('',[]),\n      image: new FormControl('',[]),\n      menus: formBuilder.array([\n        formBuilder.group({\n          itemName: new FormControl('',[]),\n          price: new FormControl('',[]),\n          ratings: new FormControl('',[]),\n          image: new FormControl('',[])\n        }\n        )\n      ]),\n      rooms: formBuilder.array([\n        formBuilder.group({\n          roomId: new FormControl('',[]),\n          roomCatagory: new FormControl('',[]),\n          roomType: new FormControl('',[]),\n          price: new FormControl('',[]),\n          images: new FormControl('',[]),\n          aminitiesList: formBuilder.array([\n            formBuilder.group({\n              aminity: new FormControl('',[])\n            })\n          ])\n        })\n      ])\n    })\n  }\n  ngOnInit(): void {\n    throw new Error('Method not implemented.');\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,WAAW,QAAmB,gBAAgB;AAQ/E,IAAaC,iBAAiB,GAA9B,MAAaA,iBAAiB;EAE5BC,YAAoBC,WAAuB,EAAUC,YAA0B,EAASC,QAAa;IAAjF,KAAAF,WAAW,GAAXA,WAAW;IAAsB,KAAAC,YAAY,GAAZA,YAAY;IAAuB,KAAAC,QAAQ,GAARA,QAAQ;IAC9F,IAAI,CAACC,YAAY,GAAGH,WAAW,CAACI,KAAK,CAAC;MACpCC,cAAc,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC;MACvCS,SAAS,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAC,EAAE,CAAC;MACjCU,SAAS,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAC,EAAE,CAAC;MACjCW,IAAI,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAC,EAAE,CAAC;MAC5BY,MAAM,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAC,EAAE,CAAC;MAC9Ba,KAAK,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAC,EAAE,CAAC;MAC7Bc,KAAK,EAAEX,WAAW,CAACY,KAAK,CAAC,CACvBZ,WAAW,CAACI,KAAK,CAAC;QAChBS,QAAQ,EAAE,IAAIhB,WAAW,CAAC,EAAE,EAAC,EAAE,CAAC;QAChCiB,KAAK,EAAE,IAAIjB,WAAW,CAAC,EAAE,EAAC,EAAE,CAAC;QAC7BkB,OAAO,EAAE,IAAIlB,WAAW,CAAC,EAAE,EAAC,EAAE,CAAC;QAC/Ba,KAAK,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAC,EAAE;OAC7B,CACA,CACF,CAAC;MACFmB,KAAK,EAAEhB,WAAW,CAACY,KAAK,CAAC,CACvBZ,WAAW,CAACI,KAAK,CAAC;QAChBa,MAAM,EAAE,IAAIpB,WAAW,CAAC,EAAE,EAAC,EAAE,CAAC;QAC9BqB,YAAY,EAAE,IAAIrB,WAAW,CAAC,EAAE,EAAC,EAAE,CAAC;QACpCsB,QAAQ,EAAE,IAAItB,WAAW,CAAC,EAAE,EAAC,EAAE,CAAC;QAChCiB,KAAK,EAAE,IAAIjB,WAAW,CAAC,EAAE,EAAC,EAAE,CAAC;QAC7BuB,MAAM,EAAE,IAAIvB,WAAW,CAAC,EAAE,EAAC,EAAE,CAAC;QAC9BwB,aAAa,EAAErB,WAAW,CAACY,KAAK,CAAC,CAC/BZ,WAAW,CAACI,KAAK,CAAC;UAChBkB,OAAO,EAAE,IAAIzB,WAAW,CAAC,EAAE,EAAC,EAAE;SAC/B,CAAC,CACH;OACF,CAAC,CACH;KACF,CAAC;EACJ;EACA0B,QAAQA,CAAA;IACN,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;CACD;AAtCY1B,iBAAiB,GAAA2B,UAAA,EAL7B7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACW9B,iBAAiB,CAsC7B;SAtCYA,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}