{"ast":null,"code":"const {\n  MAX_LENGTH\n} = require('../internal/constants');\nconst SemVer = require('../classes/semver');\nconst parse = (version, options) => {\n  if (version instanceof SemVer) {\n    return version;\n  }\n  if (typeof version !== 'string') {\n    return null;\n  }\n  if (version.length > MAX_LENGTH) {\n    return null;\n  }\n  try {\n    return new SemVer(version, options);\n  } catch (er) {\n    return null;\n  }\n};\nmodule.exports = parse;","map":{"version":3,"names":["MAX_LENGTH","require","SemVer","parse","version","options","length","er","module","exports"],"sources":["C:/MMY Project/MakeMyYatraa/Frontend/Data0/node_modules/semver/functions/parse.js"],"sourcesContent":["const { MAX_LENGTH } = require('../internal/constants')\nconst SemVer = require('../classes/semver')\nconst parse = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n"],"mappings":"AAAA,MAAM;EAAEA;AAAW,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AACvD,MAAMC,MAAM,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAC3C,MAAME,KAAK,GAAGA,CAACC,OAAO,EAAEC,OAAO,KAAK;EAClC,IAAID,OAAO,YAAYF,MAAM,EAAE;IAC7B,OAAOE,OAAO;EAChB;EAEA,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;IAC/B,OAAO,IAAI;EACb;EAEA,IAAIA,OAAO,CAACE,MAAM,GAAGN,UAAU,EAAE;IAC/B,OAAO,IAAI;EACb;EAEA,IAAI;IACF,OAAO,IAAIE,MAAM,CAACE,OAAO,EAAEC,OAAO,CAAC;EACrC,CAAC,CAAC,OAAOE,EAAE,EAAE;IACX,OAAO,IAAI;EACb;AACF,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGN,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}