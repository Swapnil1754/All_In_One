{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/Services/hotel.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/platform-browser\";\nimport * as i5 from \"@angular/material/grid-list\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"../../../image/image.component\";\nclass GetHotelComponent {\n  constructor(formBuilder, hotelService, activate, sanitizer) {\n    this.formBuilder = formBuilder;\n    this.hotelService = hotelService;\n    this.activate = activate;\n    this.sanitizer = sanitizer;\n    this.hotel = [];\n    this.getHotelForm = formBuilder.group({\n      registrationId: new FormControl('', []),\n      hotelName: new FormControl('', []),\n      ownerName: new FormControl('', []),\n      city: new FormControl('', []),\n      rating: new FormControl('', []),\n      image: new FormControl('', []),\n      menus: formBuilder.array([formBuilder.group({\n        itemName: new FormControl('', []),\n        price: new FormControl('', []),\n        ratings: new FormControl('', []),\n        image: new FormControl('', [])\n      })]),\n      rooms: formBuilder.array([formBuilder.group({\n        roomId: new FormControl('', []),\n        roomCatagory: new FormControl('', []),\n        roomType: new FormControl('', []),\n        price: new FormControl('', []),\n        images: new FormControl('', []),\n        aminitiesList: formBuilder.array([formBuilder.group({\n          aminity: new FormControl('', [])\n        })])\n      })])\n    });\n  }\n  ngOnInit() {\n    localStorage.setItem('ownerName', 'Rohit Sharma');\n    this.activate.paramMap.subscribe(x => {\n      let a = localStorage.getItem('ownerName');\n      this.hotelService.getHotelByOwnerName(a).subscribe(b => {\n        this.hotel = b;\n        this.hotel.forEach(element => {\n          this.data = 'data:image/jpg;base64,' + element.image;\n          console.log('Hotel', element.hotelName);\n          this.getHotelForm.get('registrationId')?.setValue(element.registrationId);\n          this.getHotelForm.get('hotelName')?.setValue(element.hotelName);\n          this.getHotelForm.get('ownerName')?.setValue(element.ownerName);\n          this.getHotelForm.get('city')?.setValue(element.city);\n          let imageData = 'data:image/jpeg;base64,' + element.image;\n          console.log('image', imageData);\n          this.thumbnail = this.sanitizer.bypassSecurityTrustUrl(imageData);\n        });\n      });\n    });\n  }\n}\nGetHotelComponent.ɵfac = function GetHotelComponent_Factory(t) {\n  return new (t || GetHotelComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HotelService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.DomSanitizer));\n};\nGetHotelComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GetHotelComponent,\n  selectors: [[\"app-get-hotel\"]],\n  decls: 12,\n  vars: 4,\n  consts: [[\"enctype\", \"multipart/form-data\", 3, \"formGroup\"], [\"cols\", \"4\", \"rowHeight\", \"270px\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Registration Id\", \"readonly\", \"\", 1, \"inputs\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Hotel Name\", \"readonly\", \"\", 1, \"inputs\"], [3, \"image\"]],\n  template: function GetHotelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"mat-grid-tile\", 1)(2, \"mat-card\")(3, \"mat-card-title-group\")(4, \"div\")(5, \"mat-card-title\");\n      i0.ɵɵelement(6, \"input\", 2);\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-card-subtitle\");\n      i0.ɵɵelement(9, \"input\", 3);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(11, \"app-image\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.getHotelForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate1(\"\", ctx.l.registrationId, \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"\", ctx.l.hotelName, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"image\", ctx.l.image);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i5.MatGridTile, i6.MatInput, i7.MatCard, i7.MatCardSubtitle, i7.MatCardTitle, i7.MatCardTitleGroup, i8.ImageComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { GetHotelComponent };","map":{"version":3,"names":["FormControl","GetHotelComponent","constructor","formBuilder","hotelService","activate","sanitizer","hotel","getHotelForm","group","registrationId","hotelName","ownerName","city","rating","image","menus","array","itemName","price","ratings","rooms","roomId","roomCatagory","roomType","images","aminitiesList","aminity","ngOnInit","localStorage","setItem","paramMap","subscribe","x","a","getItem","getHotelByOwnerName","b","forEach","element","data","console","log","get","setValue","imageData","thumbnail","bypassSecurityTrustUrl","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HotelService","i3","ActivatedRoute","i4","DomSanitizer","selectors","decls","vars","consts","template","GetHotelComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","l"],"sources":["C:\\MMY Project\\MakeMyYatraa\\Frontend\\Data0\\src\\app\\owner-section\\hotel\\get-hotel\\get-hotel.component.ts","C:\\MMY Project\\MakeMyYatraa\\Frontend\\Data0\\src\\app\\owner-section\\hotel\\get-hotel\\get-hotel.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { Hotel } from 'src/app/Domain/General-Domain/Hotel';\nimport { HotelService } from 'src/app/Services/hotel.service';\n\n@Component({\n  selector: 'app-get-hotel',\n  templateUrl: './get-hotel.component.html',\n  styleUrls: ['./get-hotel.component.css']\n})\nexport class GetHotelComponent implements OnInit{\n  getHotelForm: FormGroup;\n  thumbnail: any;\n  constructor(private formBuilder:FormBuilder, private hotelService: HotelService,private activate: ActivatedRoute, private sanitizer: DomSanitizer) {\n    this.getHotelForm = formBuilder.group({\n      registrationId: new FormControl('', []),\n      hotelName: new FormControl('',[]),\n      ownerName: new FormControl('',[]),\n      city: new FormControl('',[]),\n      rating: new FormControl('',[]),\n      image: new FormControl('',[]),\n      menus: formBuilder.array([\n        formBuilder.group({\n          itemName: new FormControl('',[]),\n          price: new FormControl('',[]),\n          ratings: new FormControl('',[]),\n          image: new FormControl('',[])\n        }\n        )\n      ]),\n      rooms: formBuilder.array([\n        formBuilder.group({\n          roomId: new FormControl('',[]),\n          roomCatagory: new FormControl('',[]),\n          roomType: new FormControl('',[]),\n          price: new FormControl('',[]),\n          images: new FormControl('',[]),\n          aminitiesList: formBuilder.array([\n            formBuilder.group({\n              aminity: new FormControl('',[])\n            })\n          ])\n        })\n      ])\n    })\n  }\n  data:any;\n  hotel: Hotel[] = [];\n  ngOnInit(): void {\n    localStorage.setItem('ownerName', 'Rohit Sharma');\n    this.activate.paramMap.subscribe((x)=>{\n      let a = localStorage.getItem('ownerName');\n      this.hotelService.getHotelByOwnerName(a).subscribe(b=>{\n        this.hotel=b;\n        this.hotel.forEach(element => {\n        this.data='data:image/jpg;base64,' +element.image;\n        console.log('Hotel', element.hotelName);\n        this.getHotelForm.get('registrationId')?.setValue(element.registrationId);\n        this.getHotelForm.get('hotelName')?.setValue(element.hotelName);\n        this.getHotelForm.get('ownerName')?.setValue(element.ownerName);\n        this.getHotelForm.get('city')?.setValue(element.city);\n        let imageData = 'data:image/jpeg;base64,'+element.image;\n        console.log('image', imageData)\n        this.thumbnail = this.sanitizer.bypassSecurityTrustUrl(imageData);\n        })\n      })\n    })\n  }\n}\n","<form [formGroup]=\"getHotelForm\" enctype=\"multipart/form-data\">\n    <mat-grid-tile  cols=\"4\" rowHeight=\"270px\">\n    <mat-card>\n        <mat-card-title-group>\n        <div>\n            <mat-card-title>\n                <input type=\"text\" matInput placeholder=\"Registration Id\" readonly class=\"inputs\">{{l.registrationId}}\n            </mat-card-title>\n            <mat-card-subtitle>\n                <input type=\"text\" matInput placeholder=\"Hotel Name\" readonly class=\"inputs\">{{l.hotelName}}\n            </mat-card-subtitle>\n        </div>\n    </mat-card-title-group>\n    <!-- <img mat-card-lg-image [src]=\"data\"> -->\n    <app-image [image]=\"l.image\"></app-image>\n    </mat-card>\n</mat-grid-tile>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}